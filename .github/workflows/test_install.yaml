name: "Test - Install Plugin"
on:
  pull_request:
    paths:
    - 'plugins/**'
jobs:
  krew-plugins-check:
    name: Validate PR ${{ github.event.pull_request.head.sha }}
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v1
         
    - name: Search for yaml updates
      run: |
        git remote add krew https://github.com/kubernetes-sigs/krew-index.git
        git fetch
        git fetch krew
        git branch -a
        new_plugins=($(git diff --name-only origin/master -- ./plugins | grep 'yaml'))
        [ -z "$new_plugins" ] && echo -e "\n# No new plugins were found" || echo -e "# Found new yaml file(s):\n${new_plugin}"

    - name: Setup Minikube
      id: minikube
      uses: CodingNagger/minikube-setup-action@v1.0.2

    - name: Start Minikube
      run: eval ${{ steps.minikube.outputs.launcher }} && (printf "\n\u2705[PASS] Minikube Ready\n") || (printf "\n\u274c [FAIL] Error while starting Minikube.\n" && exit 1)

    - name: Sanity Check
      run: kubectl get pods -nkube-system && (printf "\n\u2705[PASS] Sanity Check (get pods)\n") || (printf "\n\u274c [FAIL] Unable to retrieve pod list.\n" && exit 1)

    - name: Install Krew
      shell: bash -l {0}
      run: |
        # install krew (use latest release)
        (
          set -x; cd "$(mktemp -d)" &&
          krew_latest=$(basename $(curl -fsSLI -o /dev/null -w %{url_effective} https://github.com/kubernetes-sigs/krew/releases/latest))
          curl -fsSLO "https://github.com/kubernetes-sigs/krew/releases/download/${krew_latest}/krew.{tar.gz,yaml}"
          tar zxvf krew.tar.gz &&
          KREW=./krew-"$(uname | tr '[:upper:]' '[:lower:]')_amd64" &&
          "$KREW" install --manifest=krew.yaml --archive=krew.tar.gz &&
          "$KREW" update
        )

    - name: Test Plugin Installation
      shell: bash -l {0}
      run: |
        export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH"
        git fetch
        git fetch krew
        set -x
        new_plugins=($(git diff --name-only origin/master -- ./plugins | grep 'yaml' | cut -d '/' -f2 | sed 's|.yaml||g'))
        for plugin in ${new_plugins[@]}; do
          echo Running kubectl krew install --manifest="./plugins/${plugin}.yaml"
          kubectl krew install -v=4 --manifest="./plugins/${plugin}.yaml"
          [ $? -ne 0 ] && (printf "\n\u274c [FAIL] Error installing $plugin - exit code $?") && test_result='fail'
          (printf "\n\u2705[OK] ${plugin} successfully installed\n-------------\n")
        done
        [[ "$test_result" == "fail" ]] && exit 1
