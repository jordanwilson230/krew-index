name: "Test - Regression"
on:
  push:
    paths:
    - 'plugins/**'
jobs:
  krew-plugins-check:
    name: Validate PR ${{ github.event.pull_request.head.sha }}
    runs-on: ubuntu-latest
    steps:
    - name: Checkout kubectl-plugins repo
      uses: actions/checkout@v1
      # with:
         #repository: jordanwilson230/krew-index
         #ref: ${{ GITHUB_SHA }}

    - name: Setup Minikube
      id: minikube
      uses: CodingNagger/minikube-setup-action@v1.0.2

    - name: Start Minikube
      run: eval ${{ steps.minikube.outputs.launcher }} && (printf "\n\u2705[PASS] Minikube Ready\n") || (printf "\n\u274c [FAIL] Error while starting Minikube.\n" && exit 1)

    - name: Sanity Check
      run: kubectl get pods -nkube-system && (printf "\n\u2705[PASS] Sanity Check (get pods)\n") || (printf "\n\u274c [FAIL] Unable to retrieve pod list.\n" && exit 1)

    - name: Install Krew
      shell: bash -l {0}
      run: |
        # install krew (use latest release)
        (
          set -x; cd "$(mktemp -d)" &&
          krew_latest=$(basename $(curl -fsSLI -o /dev/null -w %{url_effective} https://github.com/kubernetes-sigs/krew/releases/latest))
          curl -fsSLO "https://github.com/kubernetes-sigs/krew/releases/download/${krew_latest}/krew.{tar.gz,yaml}"
          tar zxvf krew.tar.gz &&
          KREW=./krew-"$(uname | tr '[:upper:]' '[:lower:]')_amd64" &&
          "$KREW" install --manifest=krew.yaml --archive=krew.tar.gz &&
          "$KREW" update
        )

    - name: Validate All Plugins
      shell: bash -l {0}
      run: |
        export PATH="~/.krew/bin:$PATH"
        count=1
        plugin_count=$(ls -1 ./plugins | wc -l)
        for plugin in $(find ./plugins -name '*.yaml' | cut -d '/' -f3 | sed 's|.yaml||g' | sort); do
          echo -e "\n# [${count}/${plugin_count}] Installing $plugin #"
          kubectl krew install --manifest=./plugins/${plugin}.yaml
          [ $? -ne 0 ] && (printf "\n\u274c [FAIL] Error installing $plugin - exit code $?") && exit 1
          (printf "\n\u2705[OK] ${plugin} successfully installed\n-------------\n") && let count=count+1
        done
